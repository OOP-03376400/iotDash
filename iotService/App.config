<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>

    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" />
  </system.web>
  <!-- When deploying the service library project, the content of the config file must be added to the host's 
  app.config file. System.Configuration does not support config files for libraries. -->
  <system.serviceModel>

    <bindings>
      <netNamedPipeBinding>
        <binding name="iotEventPipeBinding"
                 closeTimeout="00:02:00"
                 openTimeout="00:02:00"
                 receiveTimeout="00:10:00"
                 sendTimeout="00:02:00"
                 transactionFlow="false"
                 transferMode="Buffered"
                 transactionProtocol="OleTransactions"
                 hostNameComparisonMode="StrongWildcard"
                 maxBufferPoolSize="2147483647"
                 maxBufferSize="2147483647"
                 maxConnections="1000"
                 maxReceivedMessageSize="2147483647">
          <security mode="Transport">
             <transport protectionLevel="EncryptAndSign" />
          </security>
        </binding>
      </netNamedPipeBinding>
    </bindings>

    <services>
      <service name="iotServiceProvider.iotDomainService" behaviorConfiguration="MEX">

        <endpoint address="net.pipe://localhost/iotDashShared/iotDomainService"
          binding="netNamedPipeBinding"
          bindingConfiguration="iotEventPipeBinding"
          contract="iotServiceProvider.IiotDomainService" />
        
        <endpoint address="net.pipe://localhost/iotDashShared/iotDomainService/mex" 
                  binding="mexNamedPipeBinding"
                contract="IMetadataExchange" />

        <host>
          <baseAddresses>
            <add baseAddress="net.pipe://localhost/iotDashShared/iotDomainService" />
          </baseAddresses>
        </host>
      </service>


      <service name="iotServiceProvider.DeviceUpdateEventService" behaviorConfiguration="MEX">

        <endpoint address="net.pipe://localhost/iotDashShared/DeviceEventServicePipe"
                  binding="netNamedPipeBinding"
                  bindingConfiguration="iotEventPipeBinding"
                  contract="iotServiceProvider.IDeviceEventService" />
        
        <endpoint address="net.pipe://localhost/iotDashShared/DeviceEventServicePipe/mex" 
                  binding="mexNamedPipeBinding"
                  contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="net.pipe://localhost/iotDashShared/DeviceEventServicePipe" />
          </baseAddresses>
        </host>
      </service>



    </services>

    <behaviors>
      <serviceBehaviors>
        <behavior name="iotDomainServiceBehavior">
          <!-- To avoid disclosing metadata information, 
          set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="True" httpsGetEnabled="True" />
          <!-- To receive exception details in faults for debugging purposes, 
          set the value below to true.  Set to false before deployment 
          to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="False" />
        </behavior>

        <behavior>
          <serviceMetadata  />
          <serviceDebug includeExceptionDetailInFaults="False" />
        </behavior>

        <behavior name="MEX">
          <serviceMetadata httpGetEnabled="False" />
        </behavior>


      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework">
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>